machine:
  environment:
  # Convenient shortcuts to "common" locations
    CHECKOUT: /home/ubuntu/$CIRCLE_PROJECT_REPONAME
    BASE_DIR: src/github.com/docker/notary
  # Trick circle brainflat "no absolute path" behavior
    BASE_STABLE: ../../../$HOME/.gvm/pkgsets/stable/global/$BASE_DIR
  # Workaround Circle parsing dumb bugs and/or YAML wonkyness
    CIRCLE_PAIN: "mode: set"
  # Put the coverage profile somewhere codecov's script can find it
    COVERPROFILE: coverage.out

dependencies:
  pre:
  # Copy the code to the gopath of all go versions
    - >
      gvm use stable &&
      mkdir -p "$(dirname $BASE_STABLE)" &&
      cp -R "$CHECKOUT" "$BASE_STABLE"

  override:
   # don't use circleci's default dependency installation step of `go get -d -u ./...`
   # since we already vendor everything; additionally install linting and misspell tools
    - >
      gvm use stable &&
      go get github.com/golang/lint/golint

test:
  pre:
  # Output the go versions we are going to test
    - gvm use stable && go version

  # FMT
    - gvm use stable && test -z "$(gofmt -s -l .| grep -v vendor/ | tee /dev/stderr)":
        pwd: $BASE_STABLE

  # VET
    - gvm use stable && test -z "$(go tool vet -printf=false . 2>&1 | grep -v vendor/ | tee /dev/stderr)":
        pwd: $BASE_STABLE

  # LINT
    - gvm use stable && test -z "$(golint ./... | grep -v vendor/ | tee /dev/stderr)":
        pwd: $BASE_STABLE

  override:
    - gvm use stable && test -z "$(for pkg in $(go list ./... | grep -v vendor); do go test -coverprofile=$(echo ${pkg} | sed 's|/|_|g').cover ${pkg}; done | tee /dev/stderr)"
        timeout: 600
        pwd: $BASE_STABLE

  post:
  # Report to codecov.io
    - bash <(curl -s https://codecov.io/bash)
        pwd: $BASE_STABLE
